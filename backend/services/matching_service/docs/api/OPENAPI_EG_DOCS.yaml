openapi: 3.0.4
info:
  title: Matching Service API
  description: The matching service is responsible for matching users based on some reasonable criteria (e.g., topics and difficulty level of questions, proficiency level of the users, etc.)
  version: 0.1.9

servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

paths:
  /match/request:
    post:
      summary: Request to be matched.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - criteria
              properties:
                userId:
                  type: string
                criteria:
                  type: object
                  required:
                   - difficulty
                   - topics
                  properties:
                    difficulty:
                      type: string
                      enum: [easy, medium, hard]
                    topics:
                      type: array
                      items:
                        type: string
                    # proficiency:
                    #   type: string
                    #   enum: [beginner, intermediate, advance]
      responses:
        '200':
          description: Request accepted; user queued
        '400':
          description: Request rejected; user not queued due to invalid request (e.g. missing userId, criteria, or duplicate request)

  /match/status/{userId}:
    get:
      summary: Get matching status for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Current matching status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [waiting, matched, timeout]
                  remainingTime:
                    type: integer
                    description: Remaining seconds until timeout (only if waiting)
                  sessionId:
                    type: string
                    description: Session ID for collaboration service (only if matched)
        '404':
          description: User not found in the queue

  /match/cancel/{userId}:
    delete:
      summary: Cancel matching request for a user.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Matchmaking cancelled successfully
        '404':
          description: User not found in queue
